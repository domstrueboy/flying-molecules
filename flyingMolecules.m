function flyingMolecules
R = 8.31434;      % ”ниверсальна€ газова€ посто€нна€
mju = 28*10^(-3); % ћол€рна€ масса вещества (в данном случае азота), кг/моль
T = 300;          % јбсолютна€ температура вещества,  

Vsr = (3*R*T/mju)^0.5; % —редн€€ квадратична€ скорость частиц

n=11; m=11; % n - количество частиц по вертикали y  (количество строк)
            % m - количество частиц по горизонтали x (количество столбцов), соответственно
           
deltaX=1; deltaY=1; % рассто€ни€ между отдельными частицами
a=deltaX; % равновесное рассто€ние между частицами пока допустим a=deltaX
D=1000; % энерги€ св€зи попробую подобрать
massa=0.0001; % масса частицы наугад
dt=0.0001; % шаг интегрировани€
nframes=3000; % количество кадров
A = zeros(n,m,7); % создание матрицы частиц:

%                   A(n,m,1) - координата частицы по x
%                   A(n,m,2) - координата частицы по y
%                   A(n,m,3) - скорость частицы по x
%                   A(n,m,4) - скорость частицы по y
%                   A(n,m,5) - ускорение частицы по x
%                   A(n,m,6) - ускорение частицы по y
%                   A(n,m,7) - значение 0 - частица может двигатьс€,
%                              значение 1 - частица закреплена

% I - номер частицы по y (номер строки)
% J - номер частицы по x (номер столбца)
%------------------------------------------------------------
for I=1:n,
    for J=1:m,         
    A(I,J,1)=(J-1)*deltaX;       % Ќазначение начальных координат
    A(I,J,2)=(I-1)*deltaY;       % частицам (квадратна€ упаковка)
    end
end
%------------------------------------------------------------
I=1:n;
J=1:m;
A(1,:,7)=1;
A(n,:,7)=1;                  % Ќазначение закрепленных частиц
A(:,1,7)=1;
A(:,m,7)=1;
%------------------------------------------------------------
M = moviein(nframes); % ¬ыделение массива под запись кадров
%------------------------------------------------------------
for I=1:n,
    for J=1:m,
        if A(I,J,7)==0
        znak = (rand-0.5);
            if znak > 0
            znak=1;
            elseif znak < 0
            znak=-1;
            elseif znak==0
            znak=0;
            end
        A(I,J,3)=znak*rand*2*Vsr;       % Ќазначение начальных скоростей
        znak = (rand-0.5);              % частицам по ос€м x и y
            if znak > 0                 % «начение скорости колеблетс€ около
            znak=1;                     % средней квадратичной и может быть
            elseif znak < 0             % положительным или отрицательным
            znak=-1;
            elseif znak==0
            znak=0;
            end
        A(I,J,4)=znak*rand*2*Vsr;
        end
    end
end
%------------------------------------------------------------
for k=1:nframes,
for I=1:n,
    for J=1:m,
        if A(I,J,7)==0
            Fx=0;Fy=0;
            for II=1:n,
                for JJ=1:m,
                    if (II~=I && JJ~=J)
                        r = ((A(I,J,1)-A(II,JJ,1))^2+(A(I,J,2)-A(II,JJ,2))^2)^0.5;
                        F = (-D/r)*((a/r)^12-2*(a/r)^6);
                        cosAlpha = (A(I,J,1)-A(II,JJ,1))/r;
                        sinAlpha = (A(I,J,2)-A(II,JJ,2))/r;     % –асчет ускорений по
                        edFx = F*cosAlpha;                      % ос€м x и y дл€ каждой
                        edFy = F*sinAlpha;                      % частицы
                        Fx = Fx + edFx;
                        Fy = Fy + edFy;
                    end
                end
            end
            A(I,J,5)=Fx/massa;
            A(I,J,6)=Fy/massa;
        end
    end
end

for I=1:n,
    for J=1:m,
        if A(I,J,7)==0
            A(I,J,3)=A(I,J,3)+A(I,J,5)*dt;          % –ешение методом Ёйлера
            A(I,J,4)=A(I,J,4)+A(I,J,6)*dt;          % ƒ” движени€ точки в проекци€х
                                                    % на оси координат
            A(I,J,1)=A(I,J,1)+A(I,J,3)*dt;
            A(I,J,2)=A(I,J,2)+A(I,J,4)*dt;
        end
    end
end
h=plot(A(:,:,1),A(:,:,2),'.');
set(h,'MarkerSize',1);
axis square;
axis equal;
axis([-1 m -1 n]);
set(h,'Color','blue');
M(: , k) = getframe;
end;
pause;
movie(M,0);